from fontTools.ttLib import TTFont
import base64
from io import BytesIO


def make_font_file(base64_string: str):
    bin_data = base64.decodebytes(base64_string.encode())

    with open('text.woff', 'wb') as f:
        f.write(bin_data)

    return bin_data

def convert_font_to_xml(bin_data):
    # 由于TTFont接收一个文件类型

    # BytesIO(bin_data) 把二进制数据当作文件来操作

    font = TTFont(BytesIO(bin_data))

    font.saveXML("text.xml")

base64_str = ''

bin_data = make_font_file(base64_str)

convert_font_to_xml(bin_data)

# 获取对应关系

font = TTFont(BytesIO(make_font_file(base64_str)))

uniList = font['cmap'].tables[0].ttFont.getGlyphOrder()

c = font['cmap'].tables[0].ttFont.tables['cmap'].tables[0].cmap

# c = font.getBestCmap()

print('cmap is:::::', c)